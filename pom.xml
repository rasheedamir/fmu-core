<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>se.inera.fmu</groupId>
	<artifactId>fmu-core</artifactId>
	<version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

	<name>fmu-core</name>
	<description>This is fmu-core project.</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.1.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--
                        Specifies the build profile id, which is used to find out the correct properties file.
                        This is not actually necessary for this example, but it can be used for other purposes.
                -->
                <!-- Spring profile to use -->
                <spring.profiles.active>dev</spring.profiles.active>
                <!-- log configuration -->
                <logback.loglevel>DEBUG</logback.loglevel>
            </properties>
            <build>
                <filters>
                    <!--
                        Specifies path to the properties file, which contains profile specific
                        configuration. In this case, the configuration file is searched
                        from profiles/dev/ directory.
                    -->
                    <filter>src/main/resources/application-${spring.profiles.active}.properties</filter>
                </filters>
                <resources>
                    <!--
                        Placeholders found from files located in the configured resource directories are replaced
                        with values found from the profile specific configuration files.
                    -->
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources</directory>
                        <!--
                            You can also include only specific files found from the configured directory or
                            exclude files. This can be done by uncommenting following sections and adding
                            the configuration under includes and excludes tags.
                        -->
                        <!--
                        <includes>
                            <include></include>
                        </includes>
                        <excludes>
                            <exclude></exclude>
                        </excludes>
                        -->
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <!-- Spring profile to use -->
                <spring.profiles.active>prod</spring.profiles.active>
                <!-- log configuration -->
                <logback.loglevel>INFO</logback.loglevel>
                <logback.appender>CONSOLE</logback.appender>
            </properties>
            <build>
                <filters>
                    <!--
                        Specifies path to the properties file, which contains profile specific
                        configuration. In this case, the configuration file is searched
                        from profiles/dev/ directory.
                    -->
                    <filter>src/main/resources/application-${spring.profiles.active}.properties</filter>
                </filters>
                <resources>
                    <!--
                        Placeholders found from files located in the configured resource directories are replaced
                        with values found from the profile specific configuration files.
                    -->
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources</directory>
                        <!--
                            You can also include only specific files found from the configured directory or
                            exclude files. This can be done by uncommenting following sections and adding
                            the configuration under includes and excludes tags.
                        -->
                        <!--
                        <includes>
                            <include></include>
                        </includes>
                        <excludes>
                            <exclude></exclude>
                        </excludes>
                        -->
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <arguments>
                                <argument>--spring.profiles.active=prod</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <properties>
        <!-- Maven build properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.7</java.version>
        <!-- Maven plugins versions -->
        <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
        <activiti.version>5.15</activiti.version>
        <cxf.version>2.3.4</cxf.version>
        <mysql.version>5.1.31</mysql.version>
        <HikariCP.version>1.3.8</HikariCP.version>
        <lombok.version>1.14.4</lombok.version>
        <start-class>se.inera.fmu.core.Application</start-class>
        <!-- Liquibase properties-->
        <liquibase_hibernate_version>3.4</liquibase_hibernate_version>
        <liquibase-slf4j.version>1.2.1</liquibase-slf4j.version>
        <joda-time-hibernate.version>1.3</joda-time-hibernate.version>
        <usertype.core.version>3.2.0.GA</usertype.core.version>
        <jhipster-loaded.version>0.8</jhipster-loaded.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-io.version>2.4</commons-io.version>
        <liquibase-core.version>3.2.2</liquibase-core.version>
    </properties>

    <prerequisites>
        <maven>3.0.0</maven>
    </prerequisites>

    <dependencies>

        <!-- Spring Boot -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

        <!-- Responsible for setting up Spring Data JPA, and comes bundled with Hibernate. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

        <!-- Pulls some nice tools for unit testing including JUnit4 and Mockito. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

        <!-- Hibernate validator -->

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-entitymanager.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate-entitymanager.version}</version>
        </dependency>

        <!-- In-Memory Database : HSQLDB -->

        <!-- dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>runtime</scope>
        </dependency -->

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.2.132</version>
        </dependency>

        <!-- Production DBMS : MySQL -->

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- A high performance JDBC connection pool -->

        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${HikariCP.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Activiti -->

        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-engine</artifactId>
            <version>${activiti.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-spring</artifactId>
            <version>${activiti.version}</version>
        </dependency>

        <!-- Java EE - JSR-330 API to replace @Autowired annotation with @Inject -->

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <!-- Database Migration Tool : Liquibase -->

        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase-core.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-servlet</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.liquibase.ext</groupId>
            <artifactId>liquibase-hibernate4</artifactId>
            <version>${liquibase_hibernate_version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate.javax.persistence</groupId>
                    <artifactId>hibernate-jpa-2.0-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.mattbertolini</groupId>
            <artifactId>liquibase-slf4j</artifactId>
            <version>${liquibase-slf4j.version}</version>
        </dependency>

        <!-- @ToString : lombok -->

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!-- joda-time -->

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time-hibernate</artifactId>
            <version>${joda-time-hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>${usertype.core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
            <scope>provided</scope>
        </dependency>

	</dependencies>

	<build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
		<plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <message>You are running an older version of Maven. fmu-core requires
                                        at least Maven 3.0</message>
                                    <version>[3.0.0,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <message>You are running an older version of Java. fmu-core requires at
                                        least JDK 1.7</message>
                                    <version>[1.7.0,)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Provides spring-boot:run goal for Maven, so the application can be easily run without packaging. -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <arguments>
                        <argument>--spring.profiles.active=dev</argument>
                    </arguments>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>io.github.jhipster.loaded</groupId>
                                    <artifactId>agent</artifactId>
                                    <version>${jhipster-loaded.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>spring_loaded</outputDirectory>
                                    <destFileName>springloaded-jhipster.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
	</build>

</project>
